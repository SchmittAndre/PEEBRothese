<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <!-- Adventure Stucture -->
  
  <Type Name="AdventureStructure::StringNode">
    <DisplayString Condition="type == stString">{name} = {value} (String)</DisplayString>
    <DisplayString Condition="type == stCode">{name} = {value} (Code)</DisplayString>
    <DisplayString Condition="type == stIdent">{name} = {value} (Ident)</DisplayString>
    <Expand>
      <Item Name="[Parent]" Condition="parent" IncludeView="parent">*parent</Item>
    </Expand>
  </Type>

  <Type Name="AdventureStructure::EmptyListNode">
    <DisplayString>{name} (Empty List)</DisplayString>
    <Expand>
      <Item Name="[Parent]" Condition="parent" IncludeView="parent">*parent</Item>
    </Expand>
  </Type>
  
  <Type Name="AdventureStructure::StringListNode">
    <DisplayString Condition="identifierList">{name} (Identifier-List[{items._Mypair._Myval2._Mylast - items._Mypair._Myval2._Myfirst}])</DisplayString>
    <DisplayString>{name} (String-List[{items._Mypair._Myval2._Mylast - items._Mypair._Myval2._Myfirst}])</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>items._Mypair._Myval2._Mylast - items._Mypair._Myval2._Myfirst</Size>
        <ValuePointer>items._Mypair._Myval2._Myfirst</ValuePointer>
      </ArrayItems>
      <Item Name="[Parent]" Condition="parent" IncludeView="parent">*parent</Item>
    </Expand>
  </Type>
  
  <Type Name="AdventureStructure::ListNode">
    <DisplayString>{name} (Node-List[{nodes._Mypair._Myval2._Mylast - nodes._Mypair._Myval2._Myfirst}])</DisplayString>
    <Expand>
      <IndexListItems>
        <Size>nodes._Mypair._Myval2._Mylast - nodes._Mypair._Myval2._Myfirst</Size>
        <ValueNode>*nodes[$i]</ValueNode>
      </IndexListItems>
      <Item Name="[Parent]" Condition="parent" IncludeView="parent">*parent</Item>
    </Expand>
  </Type>
  
  <!-- Custom Script -->
  
  <Type Name="CustomScript::Statement">
    <DisplayString>...</DisplayString>
  <Expand>
    <LinkedListItems>
      <HeadPointer>next</HeadPointer>
      <NextPointer>next</NextPointer>
      <ValueNode>*this</ValueNode>
    </LinkedListItems>
  </Expand>
  </Type>
  
  <Type Name="CustomScript::IfStatement">
    <DisplayString>if {*condition}</DisplayString>
    <Expand>               
      <Item Name="then">*thenPart</Item>
      <Item Name="else" Condition="elsePart">*elsePart</Item>
    </Expand>
  </Type>

  <Type Name="CustomScript::ParamIsIdentExpression">
    <DisplayString>{*paramExp} is {*identExp}</DisplayString>    
  </Type>
  
  <Type Name="CustomScript::WriteStatement">
    <DisplayString>write</DisplayString>
    <Expand>
      <IndexListItems>
        <Size>((StringConcatExpression*)stringExp)->stringExpList._Mypair._Myval2._Mylast - ((StringConcatExpression*)stringExp)->stringExpList._Mypair._Myval2._Myfirst</Size>
        <ValueNode>*(((StringConcatExpression*)stringExp)->stringExpList._Mypair._Myval2._Myfirst)[$i]</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

  <Type Name="CustomScript::IdentExpression">
    <DisplayString>:{identifier}</DisplayString>
  </Type>

  <Type Name="CustomScript::ParamExpression">
    <DisplayString>&lt;{param}&gt;</DisplayString>
  </Type>

  <Type Name="CustomScript::ObjectToStringExpression">
    <DisplayString>{*objectExp}</DisplayString>
  </Type>
  
  <Type Name="CustomScript::ConstBoolExpression">        
    <DisplayString Condition="value">true</DisplayString>
    <DisplayString>false</DisplayString>
  </Type>
    
  <Type Name="CustomScript::LogicOpExpression">                                                
    <DisplayString Condition="operation == opAND">({*boolExp1} and {*boolExp2})</DisplayString>
    <DisplayString Condition="operation == opOR">({*boolExp1} or {*boolExp2})</DisplayString>
    <DisplayString Condition="operation == opXOR">({*boolExp1} xor {*boolExp2})</DisplayString>
    <Expand>                              
      <Item Name="[left]">*boolExp1</Item>
      <Item Name="[right]">*boolExp2</Item>
      <Item Name="[operation]">operation</Item>
    </Expand>
  </Type>

  <Type Name="CustomScript::IdentAsStringExpression">
    <DisplayString>{identString}</DisplayString>
  </Type>
  
  <Type Name="CustomScript::LocationHasItemExpression">
    <DisplayString>{*itemExp} {*prepositionExp} {*locationExp}</DisplayString>
  </Type>

  <Type Name="CustomScript::ConstStringExpression">
    <DisplayString>{text}</DisplayString>
  </Type>

  <Type Name="CustomScript::SwitchStatement">
    <DisplayString>case {*switchPart} of</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>caseParts._Mypair._Myval2._Mylast - caseParts._Mypair._Myval2._Myfirst</Size>
        <ValuePointer>caseParts._Mypair._Myval2._Myfirst</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="CustomScript::SwitchStatement::CaseSection">
    <DisplayString>:{*ident}</DisplayString>
    <Expand>
      <LinkedListItems>
        <HeadPointer>statement->next</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>*this</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>
  
</AutoVisualizer>