
Title = "$rgb(0.2,0.9,0.6)$scale(1.5)$coffset_movement(0.5,0)The quest for the bow"
Description = "$rgb(0.5,0.7,0.8)An amazing adventure in search for the myterious bow, beholding more power than you could ever imagine!"

StartRoom = garden

OnInit:
  Action =
  \/CODE
    repeat
  
      write "- Enabled -"
      if 1 then write "1" else write "0" end
      if 2 then write "1" else write "0" end
      if 3 then write "1" else write "0" end
      
      g_toggle 1
      
      if not 1 then
        g_toggle 2
        if not 2 then
          g_toggle 3
          if not 3 then
            g_toggle done
          end
        end
      end
      
      if 3 then
        continue
      end
      
      write "-----------"
    until done
    
    skip
  
    write "$rotation(-10)$gray()Wake up...$sleep(2)"
    write "$rotation(-10)$gray()You have to $shaking(0.2)wake up!$sleep(2)"
    write "Finally!$sleep(1)"
    write "Why don't you take a look around, and check where you are. I don't know much, but I can tell you, that you have an important task..."
  /\END
end

Rooms:
  garden:
    Aliases:
      "garden"
      "flower garden"
    end
    Description = "The garden is filled with grass and flower patches."
    Locations:
      well
      bush
    end
    OnEnter:
      Action =
      \/CODE
        write "Upon entering the garden you fell into ":bush"."
        set_location :bush
        inform :bush
      /\END
    end
    CustomCommands:
      pick_flowers:
        Aliases:
          "pick flowers"
        end
        Action =
        \/CODE
          write "Do you, in all honesty, really think, this is the right "
                "time to pick flowers? $shaking(0.6)*sigh*$shaking_off()"
        /\END
      end
      pee_bush:
        Aliases:
          "pee in <location>"
          "pee on <location>"
        end
        Action =
        \/CODE
          if <location> is :bush then
            write "Are you kidding me? Urgh... make it quick..."
          else
            write "Please don't pee there..."
          end
        /\END
      end
      turn_handle:
        Aliases:
          "turn <item>"
          "spin <item>"
          "give <item> a spin"
          "rotate <item>"
        end
        Action =
        \/CODE
          if <item> is :handle then
            if :handle on :well then
              write "Upon giving the handle a spin, the bucket at the bottom of the well is slowly rising up."
              write "In the bucket is a key."
              location_add_item :key in :well
            else
              skip
            end
          else
            skip
          end
        /\END
      end
    end
  end
  shed:
    Aliases:
      "shed"
      "old shed"
      "run-down shed"
    end
    Description = "This is a very run-down shed."
    Locations:
      shelf
    end
    CustomCommands:
      move_shelf:
        Aliases:
          "move <location>"
        end
        Action =
        \/CODE
          if <location> is :shelf then
            set_location :shelf
            inform :shelf
            run_with :shelf "move it"
          else
            skip
          end
        /\END
      end
      move_shelf_using_cloth:
        Aliases:
          "move <location> using <item>"
          "use <item> to move <location>"
        end
        Action =
        \/CODE
          if <location> is :shelf then
            set_location :shelf
            inform :shelf
            run_with :shelf "move it using "<item>
          else
            skip
          end
        /\END
      end
    end
  end
  basement:
    Aliases:
      "basement"
    end
    Description = "Who builds a basement under a shed?"
    Locations:
      chest
    end
    CustomCommands:
      open_chest:
        Aliases:
          "open <chest>"
        end
        Action =
        \/CODE
          if <chest> is :chest then
            run_with :chest "open it"
          else
            skip
          end
        /\END
      end
    end
  end
  andre:
    Aliases:
      "andré"
      "andre"
    end
    Description = "I don't have words for this room..."
  end
end

Items:
  handle:
    Aliases:
      "handle"
    end
    Description = "A handle, you could stick onto somewhere."
    OnTake:
      Override = false
      Action =
      \/CODE
        write "That's handy!"
      /\END
    end
    OnPlace:
      Override = false
      Action =
      \/CODE
        write "Bye Handle!"
      /\END
    end
    CustomCommands:
      handle_on_well:
        Aliases:
          "stick <item> in <location>"
          "stick <item> on <location>"
        end
        Action =
        \/CODE
          if not <item> is :handle then

          elseif not <location> is :well then
            write "You can't stick ":handle" in "<location>"!"
          else
            write "Wow that was amazing! *stuff happenes*"
          end
        /\END
      end
    end
  end
  key:
    Aliases:
      "key"
    end
    Description = "A rusty key."
  end
  box:
    Aliases:
      "box"
    end
    Description = "A medium sized box, strong enough for you to stand on."
  end
  hammer:
    Aliases:
      "hammer"
      "heavy hammer"
    end
    Description = "A heavy hammer."
  end
  string:
    Aliases:
      "string"
    end   Description = "A long piece of string."
  end
  stick:
    Aliases:
      "stick"
    end
    Description = "It's a stick."
  end
  bow:
    Aliases:
      "bow"
    end
    Description = "Not the best, but good enough."
    CustomCommands:
      shoot_myself:
        Aliases:
          "shoot myself"
          "shoot myself with the bow"
        end
        Action =
        \/CODE
          write "$delay(0)$red()$shaking_on()$acceleration(0,-0.5)You died!$sleep(2)$reset()$coffset(-9,0)Haha just kidding..."
        /\END
      end
    end
  end
  cloth:
    Aliases:
      "piece of cloth"
      "strip of cloth"
      "cloth"
    end
    Description = "This piece of cloth was once part of your clothing..."
  end
  paper:
    Aliases:
      "piece of paper"
      "paper"
    end
    Description = "A small piece of paper. There is something written on it."
    CustomCommands:
      read_paper:
        Aliases:
          "read <item>"
        end
        Action =
        \/CODE
          if <item> is :paper then
            write "Following text is written on the paper:"
            write "$delay(0)$coffset(0.5,0) ____________________"
            write "$delay(0)$coffset(0.5,0)/                   /"
            write "$delay(0)| $light_gray()The code is 99342$white() |"
            write "$delay(0)|                   |"
            write "$delay(0)|_/\\___--__/^'--'\\__|"
            write ""
          else
            skip
          end
        /\END
      end
    end
  end
end

Locations:
  bush:
    Aliases:
      "bush"
    end
    Description = "The bush is in the middle of the garden."
    Items:
      in:
        List:
          "in"
          "inside"
        end
        Take:
          "out of"
        end
        Items:
          handle
          stick
          box
          bow
        end
      end
      behind:
        List:
          "behind"
          "behind of"
        end
        Take:
          "from behind"
          "from behind of"
        end
        Items:
          hammer
          key
          string
        end
      end
    end
    OnGoto:
      Override = true
      Action =
      \/CODE
        write "You shall not go to this bush!"
      /\END
    end
    OnLeave:
      Override = true
      Action =
      \/CODE
        write "You shall not leave this bush!"
      /\END
    end
  end
  shelf:
    Aliases:
      "shelf"
      "tall shelf"
      "big shelf"
      "giant shelf"
      "huge shelf"
    end
    Description = "The shelf is tall, you can't reach the topmost layer. I might be able the to move it around."
    Items:
      at_bottom:
        List:
          "at the bottom of"
          "near"
          "by"
          "at"
        end
        Take:
          "from the bottom of"
        end
      end
      under:
        List:
          "underneath"
          "under"
          "below"
        end
        Take:
          "from underneath"
          "from under"
          "from below"
        end
        Whitelist:
        end
      end
    end
    CustomCommands:
      move:
        Aliases:
          "move it"
          "move it around"
        end
        Action =
        \/CODE
          if :shelf moved then
            write "There is no point in moving it any further."
          else
            write "This hurts your hands more than you thought... You did not manage to move it in the slightest like that."
          end
        /\END
      end
      move_with_cloth:
        Aliases:
          "move it using <item>"
          "move it around using <item>"
          "use <item> to move it"
          "use <item> to move it around"
        end
        Action =
        \/CODE
          if :shelf moved then
            write "There is no point in moving it any further."
          elseif <item> is :cloth then
            if player has :cloth then
              write "Using ":cloth" you manage to move the shelf a bit, revealing a small piece of paper underneath."
              set_location :shelf
              location_add_item :paper under :shelf
              set :shelf moved
            else
              write "This might work, but you don't have ":cloth"."
            end
          else
            write "I don't think "<item>" can help moving the shelf."
          end
        /\END
      end
      read_paper:
        Aliases:
          "read <item>"
        end
        Action =
        \/CODE
          if <item> is :paper and :paper under :shelf then
            run_with :paper "read ":paper
          else
            skip
          end
        /\END
      end
    end
  end
  well:
    Aliases:
      "well"
    end
    Description = "There is a bucket deep down, but the handle is missing."
    Items:
      on:
        List:
          "on"
        end
        Take:
          "from"
          "off of"
        end
        Whitelist:
          handle
        end
      end
      in:
        List:
          "in"
        end
        Take:
          "out of"
          "from"
        end
        Whitelist:
        end
      end
    end
    OnInspect:
      Override = true
      Action =
      \/CODE
        write "Upon inspecting the well you fell inside of it and can't get out anymore."
      /\END
    end
  end
  chest:
    Aliases:
      "chest"
    end
    Description = "This chest is locked with a key-pad input device... This got awfully high-tech all of a sudden."
    Items:
      in:
        List:
          "inside of"
          "inside"
          "in"
        end
        Take:
          "out of"
        end
        Whitelist:
        end
      end
    end
    CustomCommands:
      open:
        Aliases:
          "open it"
          "open"
        end
        Action =
        \/CODE
          if :chest unlocked then
            set_description :chest "Now, this chest is open."
            write "You open the chest, revealing amazing loot!"
            filter_disable in :chest
            location_add_item :stick in :chest
            location_add_item :string in :chest
          else
            write "You can't open a locked chest, duh..."
          end
        /\END
      end
      enter_code:
        Aliases:
          "enter the code 99342"
          "type in the code 99342"
          "type the code 99342"
          "type in 99342"
          "type 99342"
          "input 99342"
          "insert 99342"
          "input the code 99342"
          "insert the code 99342"
        end
        Action =
        \/CODE
          write "The key-pad blinks green, seems like you can open the chest now. Good job!"
          set_description :chest "The chest seems to be unlocked. Why don't you open it?"
          set :chest unlocked
        /\END
      end
      enter_wrong_code:
        Aliases:
          "enter the code <code>"
          "type <code>"
          "insert <code>"
          "input <code>"
        end
        Action =
        \/CODE
          write "The key-pad starts beeping and blinks red... I don't think that was the correct code."
          clear :chest locked
        /\END
      end
    end
  end
end

RoomConnections:
  shed_door:
    Aliases:
      "shed door"
      "door"
    end
    Description = "This door is so broken, it can't stop me!"
    Room1 = garden
    Room2 = shed
    OnUse:
      Action =
      \/CODE
        if not cloth_ripped then
          write "While going through the shed door, a piece of your clothes ripped off, now lying on the ground."
          location_add_item :cloth besides :shed_door
          set_location :shed_door
          g_set cloth_ripped
        end
      /\END
    end
    Items:
      besides:
        List:
          "besides"
          "by"
          "near"
          "at"
        end
      end
    end
  end
  trapdoor:
    Aliases:
      "trapdoor"
      "hatch"
    end
    Description = "This trapdoor looks surprisingly tough."
    Room1 = shed
    Room2 = basement
  end
  andres_door:
    Aliases:
      "door to andré"
      "door to andre"
    end
    Description = "This door connects andré with the basement."
    Room1 = basement
    Room2 = andre
  end
end

ItemCombinations:
  bow:
    Input1 = string
    Input2 = stick
    Output = bow
    OnCombine:
      Override = false
      Action =
      \/CODE
        write "Please don't shoot yourself, okay?"
      /\END
    end
  end
end
